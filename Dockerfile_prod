# Base image for the container is python:3.10-slim-buster
FROM python:3.10-slim-buster

# Set environment variables
# Prevents Python from writing .pyc files to disc
ENV PYTHONDONTWRITEBYTECODE=1
# Prevents Python from buffering stdout and stderr
ENV PYTHONUNBUFFERED=1
# set noninteractive installation
ENV DEBIAN_FRONTEND=noninteractive


# create directories for the app
ENV HOME=/app
RUN mkdir $HOME
ENV APP_HOME=/app/arch
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles  # create a directory for static files (used in production with nginx)
RUN mkdir $APP_HOME/media
# Set the working directory
WORKDIR /app

# Install system dependencies (libmagic and ffmpeg)
RUN apt update && \
    apt install -y libmagic1 &&  \
    apt install -y ffmpeg &&  \
    apt install -y netcat &&  \
    apt install -y curl &&  \
    rm -rf /var/lib/apt/lists/*

# Copy the requirements.txt file and install the required packages
COPY requirements.txt requirements.txt
RUN pip install --upgrade pip
RUN pip install -r requirements.txt
# Install optional packages (if face detection and ai-based search are activated)
RUN pip install tensorflow==2.10.0
RUN pip install opencv-python-headless==4.8.0.74
RUN pip install cvlib==0.2.7
RUN pip install sentence-transformers==3.0.1
RUN pip install requests==2.28.1
# install gunicorn
RUN pip install gunicorn==21.2.0

# copy entrypoint.sh
COPY entrypoint.prod.sh .
RUN sed -i 's/\r$//g' /app/entrypoint.prod.sh
RUN chmod +x /app/entrypoint.prod.sh

# Copy the current directory contents into the container at /app
COPY . .
