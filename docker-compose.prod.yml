services:
    web:
        build:
            context: .
            dockerfile: Dockerfile_prod
        command: sh -c "cd arch/ && 
            gunicorn arch.wsgi:application --workers=2 --threads=2 --bind 0.0.0.0:8000"
        env_file:
            - .env.prod
        expose:
            - 8000
        entrypoint: ["/app/entrypoint.prod.sh"]
        healthcheck:
            test: curl --fail http://localhost:8000/ || exit 1
            interval: 20s
            timeout: 5s
            retries: 3
        depends_on:
            db:
                condition: service_healthy
        volumes:
            - static_volume:/app/arch/staticfiles
            - media_volume:/app/arch/media
    task_queue:
        build:
            context: .
            dockerfile: Dockerfile_prod
        command: python arch/manage.py qcluster
        env_file:
            - .env.prod
        volumes:
            - media_volume:/app/arch/media
        depends_on:
            db:
                condition: service_healthy
            web:
                condition: service_healthy
    db:
        image: postgres:14
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        env_file:
            - .env.db
        ports:
            - "5432:5432"
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -h localhost -U $$POSTGRES_USER -d $$POSTGRES_DB"]
            interval: 20s
            timeout: 5s
            retries: 3
    nginx:
        build: ./nginx
        volumes:
            - static_volume:/app/arch/staticfiles
            - media_volume:/app/arch/media
        ports:
            - "1337:80"
        depends_on:
            web:
                condition: service_healthy
        healthcheck:
            test: service nginx status || exit 1
            interval: 20s
            timeout: 5s
            retries: 3
volumes:
    static_volume:
    media_volume:
    postgres_data: